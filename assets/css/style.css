html, body {
    height: 100%;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
}

body {
    display: flex; /********************ADDITION*************************/
    flex-direction: column; /********************ADDITION*************************/
}

/****************************************
HEADER
****************************************/

header #top-row {
    display: flex;
    justify-content: space-between;
}

header .left-side-of-top-row {
    display: flex;
}

header .left-side-of-top-row p {
    margin: 0;
}

header ul {
    display: flex;
    margin: 0;
    list-style-type: none;
}

header #middle-row {
    text-align: center;
}

header input {
    width: 95%; /* But he wants me to achieve this without using the "width" property. I tried "padding: 0 41% 0 41%;", but it's problematic because 1) "e" of "name" is not visible and 2) when viewport narrows it cuts off and makes a lateral scroll bar. */
    text-align: center;
}

header #bottom-row {
    display: flex;
    justify-content: space-between;
}

header .left-side-of-bottom-row p {
    margin: 0;
}

header .right-of-bottom-row-ghost-elements { 
    display: flex;
    color: white;
}

header .right-of-bottom-row-ghost-elements p {
    margin: 0;
}

/*
From chat w/ Robert: Favorites and News line will be frustrating; only spend 30 mins or so on. ... Result: I couldn't find a solution to centering News while keeping Favorites on the left, so I just made the ghost elements, even though I'm sure this isn't the proper solution.
*/

/****************************************
MAIN
****************************************/

main ul {
    display: flex;
    /* "justify-content" doesn't have any effect here because there's not enough space for it to have any effect (i.e., there's no leftover space), and this is fine given that "width: 25%;" on "main li" is the reason there's no leftover space and I need "width: 25%;" in order to get the 12 items to wrap properly (4 for each row). */
    flex-wrap: wrap;
    padding: 0;
    margin: 0;
    list-style-type: none;
}

main li {
    width: 25%;
    text-align: center;
    margin-top: 25px; /* This line is here because I can't figure out how to make "align-content" have an effect when put on "main ul". Robert: "Align-content only has an effect when the flex container is larger than the content inside. In your case, it is likely only as large as the content." In what circumstances would I want to make the flex container larger? */
}

figure {
    margin: 0; 
}

img {
    max-width: 100%; /* Robert: "The go-to way to make images responsive is "max-width: 100%;". This ensures the image is never any larger than its parent, and that it scales down appropriately." */
    border-radius: 5px;
}

figcaption {
    font-size: 11px; /* Better way to do this? Robert: "Is there a better way to adjust the font size of the caption? Possibly. But for now setting a px value is fine." */
}

/****************************************
FOOTER
****************************************/

/* Don't target <footer> and <nav> in CSS; these elements in the HTML are just for semantics. */

footer {
    margin-top: auto; /********************ADDITION*************************/
}

footer ul {
    background: #1a1a1a;
    list-style-type: none;
    padding: 0 0 40px 0;
    margin-bottom: 0; /********************ADDITION*************************/
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
}

footer img {
    font-size: small;
    margin-top: 7px;
}

footer li:nth-of-type(1) img:disabled, :nth-of-type(2) img:disabled, :nth-of-type(3) img:disabled, :nth-of-type(4) img, :nth-of-type(5) img { /* QQQ: But I'm unable to give a color (I wanted to use #666666) to "disabled"? Instead it's the default blue. */
    color: #6170eb;
}





/* KEEP THIS AS A REFERENCE:
parent {
    display: flex;    mandatory 
    flex-direction: ;    row (default) | row-reverse | column | column-reverse 
    justify-content: ;    flex-start (default) | flex-end | center | space-between | space-around | space-evenly 
    align-items: ;    flex-start | flex-end | center | (baseline) | stretch (default) 
    flex-wrap: ;    nowrap (default) | wrap | wrap-reverse 
    align-content: ;    flex-start | flex-end | center | space-between | space-around | stretch (default) 
}

child {
    align-self: ;    flex-start | flex-end | center | (baseline) | stretch (default)
    flex-grow: ;    0 is default 
    flex-shrink: ;    1 is default 
    flex-basis: ;    auto is default 
    order: ;    0 is default 
}
*/






