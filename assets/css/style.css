html, body {
    height: 100%;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
}

/****************************************
HEADER
****************************************/

#top-row {
    display: flex;
    justify-content: space-between;
}

.left-side-of-top-row {
    display: flex;
}

.left-side-of-top-row p {
    margin: 0;
}

ul {
    display: flex;
    margin: 0;
    list-style-type: none;
}

#middle-row {
    text-align: center;
}

input {
    width: 95%;
    text-align: center;
}

#bottom-row {
    display: flex;
    justify-content: space-between;
}

.left-side-of-bottom-row {
    display: flex;
}

.left-side-of-bottom-row p {
    margin: 0;
}

.right-of-bottom-row-ghost-elements { 
    display: flex;
    color: white;
}

.right-of-bottom-row-ghost-elements p {
    margin: 0;
}

/*
From chat w/ Robert: Favorites and News line will be frustrating; only spend 30 mins or so on. ... Result: I couldn't find a solution to centering News while keeping Favorites on the left, so I just made the ghost elements, even though I'm sure this isn't the proper solution.
*/

/****************************************
MAIN
****************************************/

/* From his email:
Comments on your main section:
- Great start!
- Although it may seem like it's an image and a paragraph in each section, I encourage you to research more HTML elements. There's a specific pairing that may work better here, at least regarding semantics. It's not necessary, though.

It can be helpful to work with actual images instead of broken ones.

There's a free service that you can customize and use in each of your <img src="">:
https://source.unsplash.com/{size}x{size}/

An example:
<img src="https://source.unsplash.com/70x70/" />
*/

/*
From our chat: Use Flexbox of course, but will have to wrap, and give each item 25% width or whatever so that it wraps after four icons.
*/

/****************************************
FOOTER
****************************************/

/* Don't target <footer> and <nav> in CSS; these elements in the HTML are just for semantics. */

footer ul {
    background: #1a1a1a;
    list-style-type: none;
    padding: 0 0 40px 0;
    margin-top: 0;
    display: flex;
    justify-content: space-around;
    align-items: flex-start;
}

footer img {
    font-size: small;
    margin-top: 7px;
}

footer li:nth-of-type(1) img:disabled, :nth-of-type(2) img:disabled, :nth-of-type(3) img:disabled, :nth-of-type(4) img, :nth-of-type(5) img { /* Q: But I'm unable to give a color (I wanted to use #666666) to "disabled"? Instead it's the default blue. */
    color: #6170eb;
}










/* KEEP THIS EXACTLY HOW IT IS AS A REFERENCE:
parent {
    display: flex;    mandatory 
    flex-direction: ;    row (default) | row-reverse | column | column-reverse 
    justify-content: ;    flex-start (default) | flex-end | center | space-between | space-around | space-evenly 
    align-items: ;    flex-start | flex-end | center | (baseline) | stretch (default) 
    flex-wrap: ;    nowrap (default) | wrap | wrap-reverse 
    align-content: ;    flex-start | flex-end | center | space-between | space-around | stretch (default) 
}

child {
    align-self: ;    flex-start | flex-end | center | (baseline) | stretch (default)
    flex-grow: ;    0 is default 
    flex-shrink: ;    1 is default 
    flex-basis: ;    auto is default 
    order: ;    0 is default 
}
*/






